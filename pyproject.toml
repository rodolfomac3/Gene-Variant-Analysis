[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gene-variant-analysis"
version = "1.0.0"
description = "Advanced Genomic Variant Analysis Pipeline with MLOps"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Rodolfo Padilla", email = "rodolfomac3@egmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "scipy>=1.9.0",
    "xgboost>=1.6.0",
    "lightgbm>=3.3.0",
    "optuna>=3.0.0",
    "pyvcf3>=1.0.3",
    "pysam>=0.19.0",
    "cyvcf2>=0.30.0",
    "biopython>=1.79",
    "pybedtools>=0.9.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.10.0",
    "mlflow>=2.0.0",
    "dvc>=2.10.0",
    "pyyaml>=6.0",
    "loguru>=0.6.0",
    "python-dotenv>=0.19.0",
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=1.4.0",
    "tqdm>=4.64.0",
    "click>=8.0.0",
    "joblib>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.0",
    "pytest-xdist>=2.5.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.950",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "nbsphinx>=0.8.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.0",
    "ipykernel>=6.15.0",
]

[project.scripts]
gva-train = "scripts.train:main"
gva-evaluate = "scripts.evaluate:main"
gva-predict = "scripts.predict:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "config*", "scripts*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "config", "scripts"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
